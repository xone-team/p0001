<?xml version="1.0" encoding="UTF-8"?>  <!DOCTYPE mapper   PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"  "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.xone.model.hibernate.mybatis.mapper.RolesMapper">
    <resultMap id="rolesResultMap" type="com.xone.model.hibernate.entity.Roles">
        <result property="id" column="ID" />
        <result property="name" column="NAME" />
        <result property="remark" column="REMARK" />
        <result property="enable" column="ENABLE" />
        <result property="userCreated" column="USER_CREATED" />
        <result property="dateCreated" column="DATE_CREATED" />
        <result property="userUpdated" column="USER_UPDATED" />
        <result property="lastUpdated" column="LAST_UPDATED" />
    </resultMap>
	<sql id="findRolesWhere">
        <where>
			<if test="id != null">
                <![CDATA[
                and a.id = #{id}
                ]]>
            </if>
			<if test="idMin != null">
                <![CDATA[
                and a.id >= #{idMin}
                ]]>
            </if>
			<if test="idMax != null">
                <![CDATA[
                and a.id <= #{idMax}
                ]]>
            </if>
			<if test="name != null">
                <![CDATA[
                and a.name like CONCAT('%', #{name}, '%')
                ]]>
            </if>
			<if test="remark != null">
                <![CDATA[
                and a.remark like CONCAT('%', #{remark}, '%')
                ]]>
            </if>
			<if test="enable != null">
                <![CDATA[
                and a.enable like CONCAT('%', #{enable}, '%')
                ]]>
            </if>
			<if test="userCreated != null">
                <![CDATA[
                and a.userCreated = #{userCreated}
                ]]>
            </if>
			<if test="userCreatedMin != null">
                <![CDATA[
                and a.userCreated >= #{userCreatedMin}
                ]]>
            </if>
			<if test="userCreatedMax != null">
                <![CDATA[
                and a.userCreated <= #{userCreatedMax}
                ]]>
            </if>
			<if test="dateCreated != null">
                <![CDATA[
                and a.dateCreated = #{dateCreated}
                ]]>
            </if>
			<if test="dateCreatedMin != null">
                <![CDATA[
                and a.dateCreated >= #{dateCreatedMin}
                ]]>
            </if>
			<if test="dateCreatedMax != null">
                <![CDATA[
                and a.dateCreated <= #{dateCreatedMax}
                ]]>
            </if>
			<if test="userUpdated != null">
                <![CDATA[
                and a.userUpdated = #{userUpdated}
                ]]>
            </if>
			<if test="userUpdatedMin != null">
                <![CDATA[
                and a.userUpdated >= #{userUpdatedMin}
                ]]>
            </if>
			<if test="userUpdatedMax != null">
                <![CDATA[
                and a.userUpdated <= #{userUpdatedMax}
                ]]>
            </if>
			<if test="lastUpdated != null">
                <![CDATA[
                and a.lastUpdated = #{lastUpdated}
                ]]>
            </if>
			<if test="lastUpdatedMin != null">
                <![CDATA[
                and a.lastUpdated >= #{lastUpdatedMin}
                ]]>
            </if>
			<if test="lastUpdatedMax != null">
                <![CDATA[
                and a.lastUpdated <= #{lastUpdatedMax}
                ]]>
            </if>
        </where>
    </sql>
    <select id="findRolesWithUser" parameterType="java.util.Map" resultMap="rolesResultMap">
        select a.*
        from t_user_roles rel, t_roles a
        where rel.role_id = a.id
        <include refid="findRolesWhere" />
        <if test="userId != null">
            and rel.user_id = #{userId}
        </if>
        order by a.date_created
    </select>
    <select id="countRolesWithUser" parameterType="java.util.Map" resultType="int">
        select count(1)
        from t_user_roles rel, t_roles a
        where rel.role_id = a.id
        <include refid="findRolesWhere" />
        <if test="userId != null">
            and rel.user_id = #{userId}
        </if>
    </select>
    <select id="findRolesWithResources" parameterType="java.util.Map" resultMap="rolesResultMap">
        select a.*
        from t_roles_resources rel, t_roles a
        where rel.role_id = a.id
        <include refid="findRolesWhere" />
        <if test="resourceId != null">
            and rel.resource_id = #{resourceId}
        </if>
        order by a.date_created
    </select>
    <select id="countRolesWithResources" parameterType="java.util.Map" resultType="int">
        select count(1)
        from t_roles_resources rel, t_roles a
        where rel.role_id = a.id
        <include refid="findRolesWhere" />
        <if test="resourceId != null">
            and rel.resource_id = #{resourceId}
        </if>
    </select>
</mapper>